#!/usr/bin/tclsh8.6
package require tcltest
namespace import ::tcltest::*

#
# This short function simply sets the plugin environment variable
# and invokes mumps to run the desired ".m" file. (Which is
# actually specified without the trailing ".m")
#
proc mexec {mfile} {
	global env

	set env(GTMXC) "../mpcre2.xc"
	set env(MPCRE2_SRC) ".."
	if {! [info exists env(gtmroutines)]} {
		set env(gtmroutines) "."
	} else {
		set env(gtmroutines) ". $env(gtmroutines)"
	}
	set res [exec mumps -run $mfile]
	return $res
}
 
test pcre2compile {
    Test: Compiling regular expressions
} -body {
    mexec pcre2compile
} -result 0

test pcre2geterrormessage {
    Test: Getting error strings from error codes
} -body {
    mexec pcre2geterrormessage
} -result 0

test pcre2codefree {
    Test: Free storage for a compiled RE
} -body {
    mexec pcre2codefree
} -result 0

test pcre2matchdatacreatefrompattern {
    Test: Create a match data block from a compiled RE
} -body {
    mexec pcre2matchdatacreatefrompattern
} -result 0

test pcre2match {
    Test: Match a subject string against an RE
} -body {
    mexec pcre2match
} -result 0

test pcre2dfamatch {
    Test: Match a subject string against an RE with an alternate algorithm
} -body {
    mexec pcre2dfamatch
} -result 0
 
test pcre2matchdatafree {
    Test: Free a match data block
} -body {
    mexec pcre2matchdatafree
} -result 0
 
test pcre2substitute {
    Test: Substitute for a matched pattern
} -body {
    mexec pcre2substitute
} -result 0

test pcre2jitcompile {
    Test: Compile a regular expression in JIT mode
} -body {
    mexec pcre2jitcompile
} -result 0

test pcre2getmark {
    Test: Get MARK, PRUNE, or *THEN names from match block
} -body {
    mexec pcre2getmark
} -result 0
 
test pcre2getstartchar {
    Test: Get first character position of a match
} -body {
    mexec pcre2getstartchar
} -result 0
 
cleanupTests
