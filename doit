#!/bin/sh
export GTMXC=`pwd`/mpcre2.xc
export MPCRE2_SRC=`pwd`

#pcre2_code *pcre2_compile(PCRE2_SPTR pattern, PCRE2_SIZE length,
#         uint32_t options, int *errorcode, PCRE2_SIZE *erroroffset,
#	          pcre2_compile_context *ccontext);

mumps -direct <<!
;set code=$&pcre2compile("hello .*d","0",.ecode,.eoffset,"0")
set code=$&pcre2compile("hello .*d","PCRE2_CASELESS",.ecode,.eoffset,"0")
write "code = ",code,!
write "JIT: ",$&pcre2jitcompile(code,"PCRE2_JIT_COMPLETE"),!
write "Ecode = ",ecode,!
write "Eoffset = ",eoffset,!
set len=$&pcre2geterrormessage(ecode,.emsg)
write "Emsg = ",emsg,!
set md=$&pcre2matchdatacreatefrompattern(code,"0")
write "MD = ",md,!
;set mv=$&pcre2match(code,"hello world",0,0,md,0)
;set mv=$&pcre2dfamatch(code,"hello world",0,0,md,0,30)
set mv=$&pcre2substitute(code,"The beautiful hello world string",0,0,md,0,"goodbye john",.newstring,.newlen)
write "Ovec count = ",$&pcre2getovectorcount(md),!
set ovecpointer=$&pcre2getovectorpointer(md)
write "Ovec pointer = ",ovecpointer,!
do &pcre2getovpair(ovecpointer,0,.p0,.p1)
write "P0 = ",p0,"P1 = ",p1,!
set mark=$&pcre2getmark(md)
set start=$&pcre2getstartchar(md)
write "Mark (",mark,")",!
set start=$&pcre2getstartchar(md)
write "Start (",start,")",!
write "Newstring (",newstring,")",!
write "newlen (",newlen,")",!
write "MV = ",mv,!
do &pcre2matchdatafree(md)
do &pcre2codefree(code)
set md1=$&pcre2matchdatacreate(10,0)
write "MD1 = ",md1,!
set gc=$&pcre2generalcontextcreate("0","0","0")
write "GC = ",gc,!
set gc2=$&pcre2generalcontextcopy(gc)
write "GC2 = ",gc2,!
do &pcre2generalcontextfree(gc2)
set cc=$&pcre2compilecontextcreate(gc)
write "CC = ",cc,!
set cc2=$&pcre2compilecontextcopy(cc)
write "CC2 = ",cc2,!
write "BSR = ",$&pcre2setbsr(cc2,"PCRE2_BSR_ANYCRLF"),!
write "extra options = ",$&pcre2setcompileextraoptions(cc2,"PCRE2_EXTRA_ALLOW_SURROGATE_ESCAPES|PCRE2_EXTRA_MATCH_LINE")
write "max length = ",$&pcre2setmaxpatternlength(cc2,10240)
write "newline = ",$&pcre2setnewline(cc2,"PCRE2_NEWLINE_ANYCRLF")
write "parens nest = ",$&pcre2setparensnestlimit(cc2,1024),!
write "recursion guard = ",$&pcre2setcompilerecursionguard(cc2,"NULL","NULL"),!
set mc=$&pcre2matchcontextcreate(gc)
write "MC = ",mc,!
set mc2=$&pcre2matchcontextcopy(mc)
write "MC2 = ",mc2,!
do &pcre2matchcontextfree(mc2)
write "SET callout = ",$&pcre2setcallout(mc2,"NULL","NULL")
do &pcre2setoffsetlimit(mc2,11)
do &pcre2setheaplimit(mc2,2048)
do &pcre2setmatchlimit(mc2,2048)
do &pcre2setdepthlimit(mc2,2048)

set ecode=0
set code2=$&pcre2compile("(?<DN>hello)(?<RS> .*d)","0",.ecode,.eoffset,"0")
write "code2 = ",code2,!
write "ecode = ",ecode," eoffest = ",eoffset,!
set len=$&pcre2geterrormessage(ecode,.emsg)
write "Emsg = ",emsg,!
set md2=$&pcre2matchdatacreatefrompattern(code2,"0")
set mv2=$&pcre2match(code2,"yes hello world bye",0,0,md2,0)
write "mv2 = ",mv2,!
write "copy 1 = ",$&pcre2substringcopybyname(md2,"DN",.dn),!
write "DN = ",dn,!
write "copy 2 = ",$&pcre2substringcopybyname(md2,"RS",.rs),!
write "RS = ",rs,!
write "copy num1 = ",$&pcre2substringcopybynumber(md2,1,.dn2),!
write "1 = ",dn2,!
write "copy num2 = ",$&pcre2substringcopybynumber(md2,2,.rs2),!
write "2 = ",rs2,!
write "string by name = ",$&pcre2substringgetbyname(md2,"DN",.bufptr,.buflen),!
write "bufptr = ",bufptr,!
write "buflen = ",buflen,!
set mstring=$&pcre2getmstringfrombuf(bufptr,buflen)
write "mstring =",mstring,!
do &pcre2substringfree(bufptr)

write "string by name = ",$&pcre2substringgetbyname(md2,"RS",.bufptr,.buflen),!
write "bufptr = ",bufptr,!
write "buflen = ",buflen,!
set mstring=$&pcre2getmstringfrombuf(bufptr,buflen)
write "mstring =",mstring,!
do &pcre2substringfree(bufptr)


write "string by number = ",$&pcre2substringgetbynumber(md2,1,.bufptr,.buflen),!
write "bufptr = ",bufptr,!
write "buflen = ",buflen,!
set mstring=$&pcre2getmstringfrombuf(bufptr,buflen)
write "mstring =",mstring,!
do &pcre2substringfree(bufptr)

write "string by number = ",$&pcre2substringgetbynumber(md2,2,.bufptr,.buflen),!
write "bufptr = ",bufptr,!
write "buflen = ",buflen,!
set mstring=$&pcre2getmstringfrombuf(bufptr,buflen)
write "mstring =",mstring,!
do &pcre2substringfree(bufptr)

write "substringlengtbyname = ",$&pcre2substringlengthbyname(md2,"DN",.len),!
write "len = ",len,!
write "substringlengtbyname = ",$&pcre2substringlengthbyname(md2,"RS",.len),!
write "len = ",len,!

write "substringlengtbynumber = ",$&pcre2substringlengthbynumber(md2,1,.len),!
write "len = ",len,!
write "substringlengtbynumber = ",$&pcre2substringlengthbynumber(md2,2,.len),!
write "len = ",len,!

write "NUM FOR RS =",$&pcre2substringnumberfromname(code2,"RS"),!

write "stringlistget = ",$&pcre2substringlistget(md2,.strlptr,.lenlptr),!
write "strlptr = ",strlptr,!
write "lenlptr =",lenlptr,!
write "pcre2getsubstringlistcount = ",$&pcre2getsubstringlistcount(strlptr),!
set len=$&pcre2getsubstringlistcount(strlptr)
For i=1:1:len Write "Mstr(",i,") = (",$&pcre2getmstringfromsubstringlist(strlptr,lenlptr,i),")",!
do &pcre2substringlistfree(strlptr)

; jit
write "JIT",!
set code3=$&pcre2compile("(?<DN>hello)(?<RS> .*d)","0",.ecode,.eoffset,"0")
write "ecode = ",ecode," eoffest = ",eoffset,!
write "code3 = ",code3,!
write "JIT COMPILE = ",$&pcre2jitcompile(code3,"PCRE2_JIT_COMPLETE"),!
set len=$&pcre2geterrormessage(ecode,.emsg)
write "Emsg = ",emsg,!
set md3=$&pcre2matchdatacreatefrompattern(code3,"0")
set mv3=$&pcre2jitmatch(code3,"yes hello world bye",0,0,md3,0)
write "mv3 = ",mv2,!
write "copy 1 = ",$&pcre2substringcopybyname(md3,"DN",.dn),!
write "DN = ",dn,!
write "copy 2 = ",$&pcre2substringcopybyname(md3,"RS",.rs),!
write "RS = ",rs,!
do &pcre2jitfreeunusedmemory("0")

set stack=$&pcre2jitstackcreate(524288,1048576,"NULL");
write "STACK = ",stack,!
set mc3=$&pcre2matchcontextcreate("NULL")
write "MC3 = ",mc3,!
do &pcre2jitstackassign(mc3,"NULL",stack)
do &pcre2jitstackfree(stack)

;pcre2serializedecode: gtm_long_t mpcre2_serialize_decode(O:gtm_string_t * [80], I:gtm_long_t, I:gtm_string_t *, I:gtm_char_t *): SIGSAFE
;pcre2serializeencode: gtm_long_t mpcre2_serialize_encode(I:gtm_char_t *, I:gtm_long_t , O:gtm_string_t *, O:gtm_long_t *, gtm_char_t *): 

write "ENCODE = ",$&pcre2serializeencode(code2,1,.serialized,.serlen,"NULL"),!
write "SERLEN = ",serlen,!
write "SERIALIZED = ",serialized,!
write "DECODE = ",$&pcre2serializedecode(.slotvec,1,serialized,"NULL"),!
write "SLOTVEC = ",slotvec,!

write "NUMBER OF CODES = ",$&pcre2serializegetnumberofcodes(serialized),!

do &pcre2serializefree(.serialized)

set code=$&pcre2compile("hello .*d","0",.ecode,.eoffset,"0")
set code2=$&pcre2codecopy(code)
write "code2 = ",code2,!
set code3=$&pcre2codecopywithtables(code)
write "code3 = ",code3,!

set table=$&pcre2maketables("NULL");
write "table = ",table,!

set code=$&pcre2compile("hello .*d","0",.ecode,.eoffset,"0")
write "PCRE2_INFO_HASCRORLF (",$&pcre2patterninfo(code,"PCRE2_INFO_HASCRORLF",.res),")",!
write "RES (",res,")",!
set code=$&pcre2compile("hello .*d\n","0",.ecode,.eoffset,"0")
write "PCRE2_INFO_HASCRORLF (",$&pcre2patterninfo(code,"PCRE2_INFO_HASCRORLF",.res),")",!
write "RES (",res,")",!

write "mpcre2calloutenumerate: ",$&mpcre2calloutenumerate(code,5678,910112),!

halt
!
